---
version: "2"
services:
  app:
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    build:
      context: .
      dockerfile: dev.dockerfile
    command: run
    healthcheck:
      test: 
        - CMD
        - curl
        - localhost:8080/health  
        - --fail
        - --silent
      interval: 10s
      timeout: 1s
      retries: 3
    environment:
      APP__DATABASE_URL: &APP__DATABASE_URL "postgres://postgres:postgres@postgres:5432/food_db"
      APP__SOCKET: "0.0.0.0:8080"
    ports:
      - "8080:8080/tcp"
    volumes:
      - ./crates:/app/crates:ro
      - ./src:/app/src:ro
      - ./target-dev:/app/target:rw
      - ./Cargo.lock:/app/Cargo.lock:ro
      - ./Cargo.toml:/app/Cargo.toml:ro
  
  migrations:
    build:
      context: .
      dockerfile: dev.dockerfile
    command: migrate
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      APP__DATABASE_URL: *APP__DATABASE_URL
    volumes:
      - ./crates:/app/crates:ro
      - ./src:/app/src:ro
      - ./target-dev:/app/target:rw
      - ./Cargo.lock:/app/Cargo.lock:ro
      - ./Cargo.toml:/app/Cargo.toml:ro
  
  postgres:
    image: postgres:13-alpine
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432/tcp"

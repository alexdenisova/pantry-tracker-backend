name: Rust CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      RUST_CHANNEL: x86_64-unknown-linux-musl
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain if not cross-compiling
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ env.RUST_CHANNEL }}
      - name: Install musl-tools on Linux
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools
      - name: Cache target dir
        uses: Swatinem/rust-cache@v2
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: install
          args: --profile release --target ${{ env.RUST_CHANNEL }} --all-features --locked --path ${{ github.workspace }} --root dist
      - uses: actions/upload-artifact@master
        with:
          name: build
          path: dist
  publish-image:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    env:
      REGISTRY: ghcr.io
    steps:
      - uses: actions/checkout@v3
      - name: Download build artifact
        uses: actions/download-artifact@master
        with:
          name: build
          path: dist
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PACKAGES_TOKEN }}
      - name: Build Package
        run: docker build -t ${{ github.event.repository.name }} .
      - name: Publish Package
        run: |-
          TAG="$(cargo metadata --format-version=1 --no-deps | jq '.packages[0].version' | tr -d '"')"
          docker tag ${{ github.event.repository.name }} ${REGISTRY}/${{ github.actor }}/${{ github.event.repository.name }}:${TAG}
          docker push ${REGISTRY}/${{ github.actor }}/${{ github.event.repository.name }}:${TAG}

          printf '%s:\n  image:\n    repository: %s\n    tag: %s\n' \
          $(echo "${{ github.event.repository.name }}" | sed -E 's/-([a-z])/\U\1/g') \
          "${REGISTRY}/${GITHUB_REPOSITORY}" \
          "$TAG" \
          > "${{ github.event.repository.name }}.values.yaml"
      - name: Upload image artifact
        uses: actions/upload-artifact@master
        with:
          name: image-tag
          path: "${{ github.event.repository.name }}.values.yaml"
  push-values:
    runs-on: ubuntu-latest
    needs: publish-image
    if: github.ref == 'refs/heads/main'
    env:
      VALUES_DIR: "values/pantry-tracker"
    steps:
      - name: Checkout into deployment
        uses: actions/checkout@v3
        with:
          repository: alexdenisova/deployment
          token: ${{ secrets.PACKAGES_TOKEN }}
      - name: Download image artifact
        uses: actions/download-artifact@master
        with:
          name: image-tag
          path: ${{ env.VALUES_DIR }}
      - name: Commit report
        run: |
          git config --global user.name 'Action Push'
          git config --global user.email 'alexadenisova@gmail.com'
          git add -A
          git commit -m "New ${{ github.event.repository.name }} version"
          git push

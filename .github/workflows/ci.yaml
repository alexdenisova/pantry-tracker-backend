name: Rust CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  RUST_CHANNEL: 1.75.0-x86_64-unknown-linux-gnu
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust toolchain
        run: |
          rustup update --no-self-update ${{ env.RUST_CHANNEL }}
          rustup component add --toolchain ${{ env.RUST_CHANNEL }} rustfmt rust-src
          rustup default ${{ env.RUST_CHANNEL }}
      - name: Cache target dir
        uses: Swatinem/rust-cache@v2
      - name: Build Package
        run: cargo +${{ env.RUST_CHANNEL }} install --all-features --locked --profile release --path ${{ github.workspace }} --root dist
      - uses: actions/upload-artifact@master
        with:
          name: build
          path: dist
  publish-image:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@master
        with:
          name: build
          path: dist
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PACKAGES_TOKEN }}
      - name: Build Package
        run: docker build -t ${{ github.event.repository.name }} .
      - name: Publish Package
        run: |-
          TAG="$(cargo metadata --format-version=1 --no-deps | jq '.packages[0].version' | tr -d '"')"
          docker tag ${{ github.event.repository.name }} ${REGISTRY}/${{ github.actor }}/${{ github.event.repository.name }}:${TAG}
          docker push ${REGISTRY}/${{ github.actor }}/${{ github.event.repository.name }}:${TAG}
